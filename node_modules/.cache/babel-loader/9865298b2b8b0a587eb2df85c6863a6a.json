{"ast":null,"code":"var _jsxFileName = \"/Users/crystallevy/carbontracker/src/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTable, useFilters, useSortBy } from \"react-table\";\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { CSVLink } from \"react-csv\";\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n    width: '100%',\n    '& .MuiInputBase-root': {\n      color: '#000',\n      'font-size': '20px',\n      'font-family': 'museo-slab'\n    }\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '100%',\n      'background-color': '#FFF',\n      borderRadius: '8px'\n    },\n    '& .MuiFormLabel-root.Mui-focused': {\n      // outline:0px;\n      'color': '#91CA6A',\n      'font-size': '20px',\n      'font-family': 'museo-slab'\n    },\n    '& .MuiInputBase-root': {\n      color: '#000',\n      'font-size': '20px',\n      'font-family': 'museo-slab'\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: '#707070',\n        color: '#FFF',\n        'font-size': '20px',\n        'font-family': 'museo-slab',\n        borderRadius: '8px'\n      },\n      '&:hover fieldset': {\n        borderColor: 'white'\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: '#FFF'\n      }\n    },\n    '& .MuiInput-underline:after': {\n      borderBottom: '3px solid #FFF'\n    }\n  }\n}));\n\nfunction Table({\n  columns,\n  data,\n  props,\n  filter,\n  filterLabel,\n  downloadable,\n  tableclass\n}) {\n  _s();\n\n  const [filterInput, setFilterInput] = useState(\"\");\n  const placeholder = \"Search by \" + filter;\n  const classes = useStyles();\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setFilter\n  } = useTable({\n    columns,\n    data\n  }, useFilters, useSortBy // This plugin Hook will help to sort our table columns\n  );\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterChange = e => {\n    const value = e.target.value || undefined;\n    setFilter(filter, value);\n    setFilterInput(value);\n  };\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(50);\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  if (data.length === 0 || data === '' || data === null) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  } else {\n    /*\n      Render the UI for your table\n      - react-table doesn't have UI, it's headless. We just need to put the react-table props from the Hooks, and it will do its magic automatically\n    */\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [filter && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.root,\n              id: \"outlined-helperTex1\",\n              label: filterLabel,\n              onChange: handleFilterChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 18\n      }, this), downloadable && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CSVLink, {\n          data: data,\n          filename: \"table-data.csv\",\n          className: \"btn btn-primary\",\n          target: \"_blank\",\n          children: \"Download Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n        className: \"MyReactTableClass\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n              className: column.isSorted ? column.isSortedDesc ? \"sort-desc\" : \"sort-asc\" : \"\",\n              children: column.render(\"Header\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, i) => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n              children: row.cells.map(cell => {\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                  children: cell.render(\"Cell\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }, this), rows.length > 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"tfoot\", {\n            children: /*#__PURE__*/_jsxDEV(TablePagination, {\n              rowsPerPageOptions: [5, 10, 25, 50, 100],\n              component: \"div\",\n              count: rows.length,\n              rowsPerPage: rowsPerPage,\n              page: page,\n              onChangePage: handleChangePage,\n              onChangeRowsPerPage: handleChangeRowsPerPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(Table, \"vhRdvCmOAq7e2ydyL9Ks+Gh+s3k=\", false, function () {\n  return [useStyles, useTable];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/crystallevy/carbontracker/src/Table.js"],"names":["React","useState","useTable","useFilters","useSortBy","TablePagination","Row","Col","CSVLink","TextField","makeStyles","useStyles","theme","margin","spacing","width","color","root","borderRadius","borderColor","borderBottom","Table","columns","data","props","filter","filterLabel","downloadable","tableclass","filterInput","setFilterInput","placeholder","classes","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setFilter","handleChangePage","event","newPage","setPage","handleChangeRowsPerPage","setRowsPerPage","parseInt","target","value","handleFilterChange","e","undefined","page","rowsPerPage","emptyRows","Math","min","length","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","render","slice","row","i","getRowProps","cells","cell","getCellProps"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { useTable, useFilters, useSortBy } from \"react-table\";\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport {CSVLink} from \"react-csv\";\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n    width: '100%',\n    '& .MuiInputBase-root': {\n      color: '#000',\n      'font-size': '20px',\n      'font-family': 'museo-slab',\n    },\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '100%',\n      'background-color':'#FFF',\n      borderRadius: '8px',\n    },\n    '& .MuiFormLabel-root.Mui-focused': {\n      // outline:0px;\n    'color': '#91CA6A',\n    'font-size': '20px',\n    'font-family': 'museo-slab',\n    },\n    '& .MuiInputBase-root': {\n      color: '#000',\n      'font-size': '20px',\n      'font-family': 'museo-slab',\n    },\n'& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: '#707070',\n        color: '#FFF',\n        'font-size': '20px',\n    'font-family': 'museo-slab',\n    borderRadius: '8px',\n      },\n      '&:hover fieldset': {\n        borderColor: 'white',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: '#FFF',\n      },\n    },\n    '& .MuiInput-underline:after': {\n      borderBottom: '3px solid #FFF',\n    }\n  },\n}));\nfunction Table({ columns, data, props, filter, filterLabel, downloadable, tableclass}) {\n  const [filterInput, setFilterInput] = useState(\"\");\n  const placeholder = \"Search by \"+ filter;\n  const classes = useStyles();\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setFilter\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useFilters,\n    useSortBy\n     // This plugin Hook will help to sort our table columns\n  );\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n    const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n\n    const handleFilterChange = e => {\n      const value = e.target.value || undefined;\n      setFilter(filter, value);\n      setFilterInput(value);\n\n  };\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(50);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  if (data.length === 0 || data === '' || data === null){\n    return (<></>);\n  } else {\n    /*\n      Render the UI for your table\n      - react-table doesn't have UI, it's headless. We just need to put the react-table props from the Hooks, and it will do its magic automatically\n    */\n    return (\n    <>\n      {filter && <div>\n        <Row>\n          <Col>\n            <TextField className={classes.root}\n          id=\"outlined-helperTex1\"\n          label={filterLabel}\n\n          onChange={handleFilterChange}\n        />\n          </Col>\n        </Row>\n        </div>}\n      {downloadable && <div>\n        <CSVLink\n          data={data}\n          filename={\"table-data.csv\"}\n          className=\"btn btn-primary\"\n          target=\"_blank\">\n            Download Data\n        </CSVLink>\n      </div>}\n      <table {...getTableProps()} className='MyReactTableClass'>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  className={\n                    column.isSorted\n                      ? column.isSortedDesc\n                        ? \"sort-desc\"\n                        : \"sort-asc\"\n                      : \"\"\n                  }\n                >\n                  {column.render(\"Header\")}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return (\n                  <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n        {rows.length > 5 && <div>\n        <tfoot>\n\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n        </tfoot>\n        </div>}\n      </table>\n      </>\n    );\n  }\n\n}\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}