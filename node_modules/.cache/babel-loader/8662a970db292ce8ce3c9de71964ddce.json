{"ast":null,"code":"var _jsxFileName = \"/Users/crystallevy/carbontracker/src/Accordion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Table from './Table';\nimport { VictoryPie } from \"victory\";\nimport { VictoryAxis, VictoryTheme, VictoryChart, VictoryBar } from \"victory\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary\n  }\n}));\nexport default function ControlledAccordions({\n  data,\n  props\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const dates = data.date;\n  const values = data.values;\n  const [total, setTotal] = useState(0);\n  const [chartValues, setChartValues] = useState([]);\n  useEffect(() => {\n    calculateTotal();\n  }, []);\n\n  function calculateTotal() {\n    var emissionTotal = 0;\n    var vals = [];\n\n    for (var i in values) {\n      emissionTotal = emissionTotal + parseFloat(values[i].emission);\n      vals.push(values[i].name);\n    }\n\n    setTotal(emissionTotal.toFixed(2));\n    setChartValues(vals);\n  }\n\n  const columns = useMemo(() => [{\n    Header: \"Name\",\n    accessor: \"name\"\n  }, {\n    Header: \"Info\",\n    accessor: \"info\"\n  }, {\n    Header: \"Emission\",\n    accessor: \"emission\"\n  }]);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Accordion, {\n      expanded: expanded === dates,\n      onChange: handleChange(dates),\n      children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n        expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 23\n        }, this),\n        \"aria-controls\": \"panel1bh-content\",\n        id: \"panel1bh-header\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.heading,\n          children: dates\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.secondaryHeading,\n          children: [\"Total Daily Footprint: \", total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: [/*#__PURE__*/_jsxDEV(Table, {\n            columns: columns,\n            data: values\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(VictoryChart // adding the material theme provided with Victory\n          , {\n            theme: VictoryTheme.material,\n            domainPadding: 20,\n            children: [/*#__PURE__*/_jsxDEV(VictoryAxis, {\n              tickValues: [1, 2, 3, 4],\n              tickFormat: chartValues\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(VictoryAxis, {\n              dependentAxis: true,\n              tickFormat: x => `${x / 1000}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(VictoryBar, {\n              data: values,\n              x: \"name\",\n              y: \"emission\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(VictoryChart, {\n            children: /*#__PURE__*/_jsxDEV(VictoryBar, {\n              data: values // data accessor for x values\n              ,\n              x: \"name\" // data accessor for y values\n              ,\n              y: \"emission\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ControlledAccordions, \"RhMCRbRJsbyVNBaiZRn4y4hWLks=\", false, function () {\n  return [useStyles];\n});\n\n_c = ControlledAccordions;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlledAccordions\");","map":{"version":3,"sources":["/Users/crystallevy/carbontracker/src/Accordion.js"],"names":["React","useState","useEffect","useMemo","makeStyles","Accordion","AccordionDetails","AccordionSummary","Typography","ExpandMoreIcon","Table","VictoryPie","VictoryAxis","VictoryTheme","VictoryChart","VictoryBar","useStyles","theme","root","width","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","ControlledAccordions","data","props","classes","expanded","setExpanded","dates","date","values","total","setTotal","chartValues","setChartValues","calculateTotal","emissionTotal","vals","i","parseFloat","emission","push","name","toFixed","columns","Header","accessor","handleChange","panel","event","isExpanded","material","x"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useMemo} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Table from './Table';\nimport { VictoryPie } from \"victory\";\nimport { VictoryAxis, VictoryTheme, VictoryChart, VictoryBar } from \"victory\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function ControlledAccordions({data,props}) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const dates = data.date;\n  const values = data.values;\n  const [total, setTotal] = useState(0);\n  const [chartValues, setChartValues] = useState([]);\n\n  useEffect(() => {\n    calculateTotal();\n\n  },[]);\n\n  function calculateTotal(){\n    var emissionTotal = 0;\n    var vals = [];\n    for (var i in values){\n      emissionTotal = emissionTotal + parseFloat(values[i].emission);\n      vals.push(values[i].name)\n    }\n    setTotal(emissionTotal.toFixed(2));\n    setChartValues(vals);\n  }\n\n  const columns = useMemo(()=>[\n    {\n      Header: \"Name\",\n      accessor: \"name\"\n    },{\n      Header:\"Info\",\n      accessor:\"info\"\n    },{\n      Header: \"Emission\",\n      accessor:\"emission\"\n    }\n  ])\n\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n\n    <div className={classes.root}>\n\n      <Accordion expanded={expanded === dates} onChange={handleChange(dates)}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n        >\n          <Typography className={classes.heading}>{dates}</Typography>\n          <Typography className={classes.secondaryHeading}>Total Daily Footprint: {total}</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n        <div className={classes.root}>\n          <Table columns={columns} data={values} />\n          <VictoryChart\n        // adding the material theme provided with Victory\n        theme={VictoryTheme.material}\n        domainPadding={20}\n      >\n        <VictoryAxis\n          tickValues={[1, 2, 3, 4]}\n          tickFormat={chartValues}\n        />\n        <VictoryAxis\n          dependentAxis\n          tickFormat={(x) => (`${x / 1000}`)}\n        />\n        <VictoryBar\n          data={values}\n          x=\"name\"\n          y=\"emission\"\n        />\n      </VictoryChart>\n          <VictoryChart><VictoryBar\n        data={values}\n        // data accessor for x values\n        x=\"name\"\n        // data accessor for y values\n        y=\"emission\"\n      />\n      </VictoryChart>\n          </div>\n        </AccordionDetails>\n      </Accordion>\n      \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}